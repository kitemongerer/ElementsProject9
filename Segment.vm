function Segment.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 8
pop static 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 0
pop this 3
push pointer 0
return
function Segment.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Segment.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function Segment.getX 0
push argument 0
pop pointer 0
push this 0
return
function Segment.getY 0
push argument 0
pop pointer 0
push this 1
return
function Segment.draw 0
push argument 0
pop pointer 0
push this 0
push static 0
call Math.multiply 2
push constant 1
add
push this 1
push static 0
call Math.multiply 2
push constant 1
add
push this 0
push static 0
call Math.multiply 2
push static 0
add
push constant 1
sub
push this 1
push static 0
call Math.multiply 2
push static 0
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Segment.next 0
push argument 0
pop pointer 0
push this 2
return
function Segment.previous 0
push argument 0
pop pointer 0
push this 3
return
function Segment.add 0
push argument 0
pop pointer 0
push argument 1
pop this 2
push argument 1
push pointer 0
call Segment.setPrevious 2
pop temp 0
push constant 0
return
function Segment.setNext 0
push argument 0
pop pointer 0
push argument 1
pop this 2
push constant 0
return
function Segment.setPrevious 0
push argument 0
pop pointer 0
push argument 1
pop this 3
push constant 0
return
function Segment.collide 0
push argument 0
pop pointer 0
push argument 1
call Segment.getX 1
push this 0
eq
push argument 1
call Segment.getY 1
push this 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Segment.dispose 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
call Segment.dispose 1
pop temp 0
label IF_FALSE0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
