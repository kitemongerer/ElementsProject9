class Main {

	function char getDirection(char direction) {
		var char tmp;
		let tmp = Keyboard.keyPressed();

		if ( (tmp = 87) | (tmp = 65) | (tmp = 83) | (tmp = 68) ) {
			
			//Make sure snake can't go backwards on itself
			if ( (direction = 87) & (tmp = 83) ) {
				return 0;
			}
			if ( (direction = 83) & (tmp = 87) ) {
				return 0;
			}
			if ( (direction = 65) & (tmp = 68) ) {
				return 0;
			}
			if ( (direction = 68) & (tmp = 65) ) {
				return 0;
			} else {
				return tmp;
			}
		}
		
		return 0;
	}

	function Segment generateFood(Snake snake) {
		var bool collide;
		var Segment nfood;

		let collide = -1;

		while (collide) {
			let nfood = Segment.new(Random.randRange(63),Random.randRange(31), null);
			let collide = snake.overlap(nfood);
		}

		return nfood;

	}

	function void welcome() {
		do Output.moveCursor(10, 24);
		do Output.printString("Welcome to Snake!");
		do Output.moveCursor(12, 18);
		do Output.printString("Press W, A, S, or D to start");

		return;
	}


	function void main() {
		var int counter;
		var char direction;
		var Snake snake;
		var Segment food;
		var char tmp;
		var bool ateFood;

		let direction = 0;
		do Main.welcome();

		while(direction = 0) {
			let counter = counter + 1;
			let direction = Main.getDirection(direction);
		}

		let snake = Snake.new(direction);
		do Random.setSeed(counter);
		let food = Main.generateFood(snake);

		while(snake.isAlive()) {
			let tmp = Main.getDirection(direction);

			if ( ~(tmp = 0) ) {
				let direction = tmp;
			}

			// Move the snake and draw the snake
			do Screen.clearScreen();
			do snake.move(direction, food);

			if (snake.hasEaten()) {
				let food = Main.generateFood(snake);
			}

			do Screen.drawCircle(food.getX()*8 + 4, food.getY()*8 + 4, 3);
			do snake.drawSnake();
			do Sys.wait(100);

		}

		return;
	}

	
}

